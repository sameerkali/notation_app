{"ast":null,"code":"/* eslint-disable no-var, prefer-template */\nvar uppercasePattern = /[A-Z]/g;\nvar msPattern = /^ms-/;\nvar cache = {};\n\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase();\n}\n\nfunction hyphenateStyleName(name) {\n  if (cache.hasOwnProperty(name)) {\n    return cache[name];\n  }\n\n  var hName = name.replace(uppercasePattern, toHyphenLower);\n  return cache[name] = msPattern.test(hName) ? '-' + hName : hName;\n}\n\nexport default hyphenateStyleName;","map":{"version":3,"names":["uppercasePattern","msPattern","cache","toHyphenLower","match","toLowerCase","hyphenateStyleName","name","hasOwnProperty","hName","replace","test"],"sources":["C:/Users/Administrator/Documents/GitHub/notation_app/node_modules/hyphenate-style-name/index.js"],"sourcesContent":["/* eslint-disable no-var, prefer-template */\r\nvar uppercasePattern = /[A-Z]/g\r\nvar msPattern = /^ms-/\r\nvar cache = {}\r\n\r\nfunction toHyphenLower(match) {\r\n  return '-' + match.toLowerCase()\r\n}\r\n\r\nfunction hyphenateStyleName(name) {\r\n  if (cache.hasOwnProperty(name)) {\r\n    return cache[name]\r\n  }\r\n\r\n  var hName = name.replace(uppercasePattern, toHyphenLower)\r\n  return (cache[name] = msPattern.test(hName) ? '-' + hName : hName)\r\n}\r\n\r\nexport default hyphenateStyleName\r\n"],"mappings":"AAAA;AACA,IAAIA,gBAAgB,GAAG,QAAvB;AACA,IAAIC,SAAS,GAAG,MAAhB;AACA,IAAIC,KAAK,GAAG,EAAZ;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAC5B,OAAO,MAAMA,KAAK,CAACC,WAAN,EAAb;AACD;;AAED,SAASC,kBAAT,CAA4BC,IAA5B,EAAkC;EAChC,IAAIL,KAAK,CAACM,cAAN,CAAqBD,IAArB,CAAJ,EAAgC;IAC9B,OAAOL,KAAK,CAACK,IAAD,CAAZ;EACD;;EAED,IAAIE,KAAK,GAAGF,IAAI,CAACG,OAAL,CAAaV,gBAAb,EAA+BG,aAA/B,CAAZ;EACA,OAAQD,KAAK,CAACK,IAAD,CAAL,GAAcN,SAAS,CAACU,IAAV,CAAeF,KAAf,IAAwB,MAAMA,KAA9B,GAAsCA,KAA5D;AACD;;AAED,eAAeH,kBAAf"},"metadata":{},"sourceType":"module"}