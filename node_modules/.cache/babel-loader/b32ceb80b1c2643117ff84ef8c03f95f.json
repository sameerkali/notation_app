{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nvar useEnhancedEffect = typeof window !== 'undefined' && process.env.NODE_ENV !== 'test' ? React.useLayoutEffect : React.useEffect;\n/**\r\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\r\n *\r\n * This component can be useful in a variety of situations:\r\n * - Escape hatch for broken dependencies not supporting SSR.\r\n * - Improve the time-to-first paint on the client by only rendering above the fold.\r\n * - Reduce the rendering time on the server.\r\n * - Under too heavy server load, you can turn on service degradation.\r\n */\n\nfunction NoSsr(props) {\n  var children = props.children,\n      _props$defer = props.defer,\n      defer = _props$defer === void 0 ? false : _props$defer,\n      _props$fallback = props.fallback,\n      fallback = _props$fallback === void 0 ? null : _props$fallback;\n\n  var _React$useState = React.useState(false),\n      mountedState = _React$useState[0],\n      setMountedState = _React$useState[1];\n\n  useEnhancedEffect(function () {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(function () {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]); // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\n\n  return React.createElement(React.Fragment, null, mountedState ? children : fallback);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes = {\n  /**\r\n   * You can wrap a node.\r\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\r\n   * If `true`, the component will not only prevent server-side rendering.\r\n   * It will also defer the rendering of the children into a different screen frame.\r\n   */\n  defer: PropTypes.bool,\n\n  /**\r\n   * The fallback content to display.\r\n   */\n  fallback: PropTypes.node\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\n\nexport default NoSsr;","map":{"version":3,"names":["React","PropTypes","exactProp","useEnhancedEffect","window","process","env","NODE_ENV","useLayoutEffect","useEffect","NoSsr","props","children","_props$defer","defer","_props$fallback","fallback","_React$useState","useState","mountedState","setMountedState","createElement","Fragment","propTypes","node","isRequired","bool"],"sources":["C:/Users/Administrator/Documents/GitHub/notation_app/node_modules/@material-ui/core/esm/NoSsr/NoSsr.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { exactProp } from '@material-ui/utils';\r\nvar useEnhancedEffect = typeof window !== 'undefined' && process.env.NODE_ENV !== 'test' ? React.useLayoutEffect : React.useEffect;\r\n/**\r\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\r\n *\r\n * This component can be useful in a variety of situations:\r\n * - Escape hatch for broken dependencies not supporting SSR.\r\n * - Improve the time-to-first paint on the client by only rendering above the fold.\r\n * - Reduce the rendering time on the server.\r\n * - Under too heavy server load, you can turn on service degradation.\r\n */\r\n\r\nfunction NoSsr(props) {\r\n  var children = props.children,\r\n      _props$defer = props.defer,\r\n      defer = _props$defer === void 0 ? false : _props$defer,\r\n      _props$fallback = props.fallback,\r\n      fallback = _props$fallback === void 0 ? null : _props$fallback;\r\n\r\n  var _React$useState = React.useState(false),\r\n      mountedState = _React$useState[0],\r\n      setMountedState = _React$useState[1];\r\n\r\n  useEnhancedEffect(function () {\r\n    if (!defer) {\r\n      setMountedState(true);\r\n    }\r\n  }, [defer]);\r\n  React.useEffect(function () {\r\n    if (defer) {\r\n      setMountedState(true);\r\n    }\r\n  }, [defer]); // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\r\n\r\n  return React.createElement(React.Fragment, null, mountedState ? children : fallback);\r\n}\r\n\r\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes = {\r\n  /**\r\n   * You can wrap a node.\r\n   */\r\n  children: PropTypes.node.isRequired,\r\n\r\n  /**\r\n   * If `true`, the component will not only prevent server-side rendering.\r\n   * It will also defer the rendering of the children into a different screen frame.\r\n   */\r\n  defer: PropTypes.bool,\r\n\r\n  /**\r\n   * The fallback content to display.\r\n   */\r\n  fallback: PropTypes.node\r\n} : void 0;\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  // eslint-disable-next-line\r\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\r\n}\r\n\r\nexport default NoSsr;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,IAAIC,iBAAiB,GAAG,OAAOC,MAAP,KAAkB,WAAlB,IAAiCC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAA1D,GAAmEP,KAAK,CAACQ,eAAzE,GAA2FR,KAAK,CAACS,SAAzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;EACpB,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;EAAA,IACIC,YAAY,GAAGF,KAAK,CAACG,KADzB;EAAA,IAEIA,KAAK,GAAGD,YAAY,KAAK,KAAK,CAAtB,GAA0B,KAA1B,GAAkCA,YAF9C;EAAA,IAGIE,eAAe,GAAGJ,KAAK,CAACK,QAH5B;EAAA,IAIIA,QAAQ,GAAGD,eAAe,KAAK,KAAK,CAAzB,GAA6B,IAA7B,GAAoCA,eAJnD;;EAMA,IAAIE,eAAe,GAAGjB,KAAK,CAACkB,QAAN,CAAe,KAAf,CAAtB;EAAA,IACIC,YAAY,GAAGF,eAAe,CAAC,CAAD,CADlC;EAAA,IAEIG,eAAe,GAAGH,eAAe,CAAC,CAAD,CAFrC;;EAIAd,iBAAiB,CAAC,YAAY;IAC5B,IAAI,CAACW,KAAL,EAAY;MACVM,eAAe,CAAC,IAAD,CAAf;IACD;EACF,CAJgB,EAId,CAACN,KAAD,CAJc,CAAjB;EAKAd,KAAK,CAACS,SAAN,CAAgB,YAAY;IAC1B,IAAIK,KAAJ,EAAW;MACTM,eAAe,CAAC,IAAD,CAAf;IACD;EACF,CAJD,EAIG,CAACN,KAAD,CAJH,EAhBoB,CAoBP;;EAEb,OAAOd,KAAK,CAACqB,aAAN,CAAoBrB,KAAK,CAACsB,QAA1B,EAAoC,IAApC,EAA0CH,YAAY,GAAGP,QAAH,GAAcI,QAApE,CAAP;AACD;;AAEDX,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCG,KAAK,CAACa,SAAN,GAAkB;EACxD;AACF;AACA;EACEX,QAAQ,EAAEX,SAAS,CAACuB,IAAV,CAAeC,UAJ+B;;EAMxD;AACF;AACA;AACA;EACEX,KAAK,EAAEb,SAAS,CAACyB,IAVuC;;EAYxD;AACF;AACA;EACEV,QAAQ,EAAEf,SAAS,CAACuB;AAfoC,CAA1D,GAgBI,KAAK,CAhBT;;AAkBA,IAAInB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;EACzC;EACAG,KAAK,CAAC,cAAc,EAAf,CAAL,GAA0BR,SAAS,CAACQ,KAAK,CAACa,SAAP,CAAnC;AACD;;AAED,eAAeb,KAAf"},"metadata":{},"sourceType":"module"}