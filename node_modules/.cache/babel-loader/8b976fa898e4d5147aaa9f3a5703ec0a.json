{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\nvar _leaveRenders, _enterRenders;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ENTERED, ENTERING, EXITING } from './Transition';\nimport TransitionGroupContext from './TransitionGroupContext';\n\nfunction areChildrenDifferent(oldChildren, newChildren) {\n  if (oldChildren === newChildren) return false;\n\n  if (React.isValidElement(oldChildren) && React.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {\n    return false;\n  }\n\n  return true;\n}\n/**\r\n * Enum of modes for SwitchTransition component\r\n * @enum { string }\r\n */\n\n\nexport var modes = {\n  out: 'out-in',\n  in: 'in-out'\n};\n\nvar callHook = function callHook(element, name, cb) {\n  return function () {\n    var _element$props;\n\n    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);\n    cb();\n  };\n};\n\nvar leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function (_ref) {\n  var current = _ref.current,\n      changeState = _ref.changeState;\n  return React.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(ENTERING, null);\n    })\n  });\n}, _leaveRenders[modes.in] = function (_ref2) {\n  var current = _ref2.current,\n      changeState = _ref2.changeState,\n      children = _ref2.children;\n  return [current, React.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(ENTERING);\n    })\n  })];\n}, _leaveRenders);\nvar enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function (_ref3) {\n  var children = _ref3.children,\n      changeState = _ref3.changeState;\n  return React.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(ENTERED, React.cloneElement(children, {\n        in: true\n      }));\n    })\n  });\n}, _enterRenders[modes.in] = function (_ref4) {\n  var current = _ref4.current,\n      children = _ref4.children,\n      changeState = _ref4.changeState;\n  return [React.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(ENTERED, React.cloneElement(children, {\n        in: true\n      }));\n    })\n  }), React.cloneElement(children, {\n    in: true\n  })];\n}, _enterRenders);\n/**\r\n * A transition component inspired by the [vue transition modes](https://vuejs.org/v2/guide/transitions.html#Transition-Modes).\r\n * You can use it when you want to control the render between state transitions.\r\n * Based on the selected mode and the child's key which is the `Transition` or `CSSTransition` component, the `SwitchTransition` makes a consistent transition between them.\r\n *\r\n * If the `out-in` mode is selected, the `SwitchTransition` waits until the old child leaves and then inserts a new child.\r\n * If the `in-out` mode is selected, the `SwitchTransition` inserts a new child first, waits for the new child to enter and then removes the old child.\r\n *\r\n * **Note**: If you want the animation to happen simultaneously\r\n * (that is, to have the old child removed and a new child inserted **at the same time**),\r\n * you should use\r\n * [`TransitionGroup`](https://reactcommunity.org/react-transition-group/transition-group)\r\n * instead.\r\n *\r\n * ```jsx\r\n * function App() {\r\n *  const [state, setState] = useState(false);\r\n *  return (\r\n *    <SwitchTransition>\r\n *      <CSSTransition\r\n *        key={state ? \"Goodbye, world!\" : \"Hello, world!\"}\r\n *        addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\r\n *        classNames='fade'\r\n *      >\r\n *        <button onClick={() => setState(state => !state)}>\r\n *          {state ? \"Goodbye, world!\" : \"Hello, world!\"}\r\n *        </button>\r\n *      </CSSTransition>\r\n *    </SwitchTransition>\r\n *  );\r\n * }\r\n * ```\r\n *\r\n * ```css\r\n * .fade-enter{\r\n *    opacity: 0;\r\n * }\r\n * .fade-exit{\r\n *    opacity: 1;\r\n * }\r\n * .fade-enter-active{\r\n *    opacity: 1;\r\n * }\r\n * .fade-exit-active{\r\n *    opacity: 0;\r\n * }\r\n * .fade-enter-active,\r\n * .fade-exit-active{\r\n *    transition: opacity 500ms;\r\n * }\r\n * ```\r\n */\n\nvar SwitchTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(SwitchTransition, _React$Component);\n\n  function SwitchTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      status: ENTERED,\n      current: null\n    };\n    _this.appeared = false;\n\n    _this.changeState = function (status, current) {\n      if (current === void 0) {\n        current = _this.state.current;\n      }\n\n      _this.setState({\n        status: status,\n        current: current\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = SwitchTransition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.appeared = true;\n  };\n\n  SwitchTransition.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    if (props.children == null) {\n      return {\n        current: null\n      };\n    }\n\n    if (state.status === ENTERING && props.mode === modes.in) {\n      return {\n        status: ENTERING\n      };\n    }\n\n    if (state.current && areChildrenDifferent(state.current, props.children)) {\n      return {\n        status: EXITING\n      };\n    }\n\n    return {\n      current: React.cloneElement(props.children, {\n        in: true\n      })\n    };\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        mode = _this$props.mode,\n        _this$state = this.state,\n        status = _this$state.status,\n        current = _this$state.current;\n    var data = {\n      children: children,\n      current: current,\n      changeState: this.changeState,\n      status: status\n    };\n    var component;\n\n    switch (status) {\n      case ENTERING:\n        component = enterRenders[mode](data);\n        break;\n\n      case EXITING:\n        component = leaveRenders[mode](data);\n        break;\n\n      case ENTERED:\n        component = current;\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: {\n        isMounting: !this.appeared\n      }\n    }, component);\n  };\n\n  return SwitchTransition;\n}(React.Component);\n\nSwitchTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\r\n   * Transition modes.\r\n   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.\r\n   * `in-out`: New element transitions in first, then when complete, the current element transitions out.\r\n   *\r\n   * @type {'out-in'|'in-out'}\r\n   */\n  mode: PropTypes.oneOf([modes.in, modes.out]),\n\n  /**\r\n   * Any `Transition` or `CSSTransition` component.\r\n   */\n  children: PropTypes.oneOfType([PropTypes.element.isRequired])\n} : {};\nSwitchTransition.defaultProps = {\n  mode: modes.out\n};\nexport default SwitchTransition;","map":{"version":3,"names":["_inheritsLoose","_leaveRenders","_enterRenders","React","PropTypes","ENTERED","ENTERING","EXITING","TransitionGroupContext","areChildrenDifferent","oldChildren","newChildren","isValidElement","key","modes","out","in","callHook","element","name","cb","_element$props","props","apply","arguments","leaveRenders","_ref","current","changeState","cloneElement","onExited","_ref2","children","onEntered","enterRenders","_ref3","_ref4","SwitchTransition","_React$Component","_this","_len","length","args","Array","_key","call","concat","state","status","appeared","setState","_proto","prototype","componentDidMount","getDerivedStateFromProps","mode","render","_this$props","_this$state","data","component","createElement","Provider","value","isMounting","Component","propTypes","process","env","NODE_ENV","oneOf","oneOfType","isRequired","defaultProps"],"sources":["C:/Users/Administrator/Documents/GitHub/notation_app/node_modules/react-transition-group/esm/SwitchTransition.js"],"sourcesContent":["import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\r\n\r\nvar _leaveRenders, _enterRenders;\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ENTERED, ENTERING, EXITING } from './Transition';\r\nimport TransitionGroupContext from './TransitionGroupContext';\r\n\r\nfunction areChildrenDifferent(oldChildren, newChildren) {\r\n  if (oldChildren === newChildren) return false;\r\n\r\n  if (React.isValidElement(oldChildren) && React.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n/**\r\n * Enum of modes for SwitchTransition component\r\n * @enum { string }\r\n */\r\n\r\n\r\nexport var modes = {\r\n  out: 'out-in',\r\n  in: 'in-out'\r\n};\r\n\r\nvar callHook = function callHook(element, name, cb) {\r\n  return function () {\r\n    var _element$props;\r\n\r\n    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);\r\n    cb();\r\n  };\r\n};\r\n\r\nvar leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function (_ref) {\r\n  var current = _ref.current,\r\n      changeState = _ref.changeState;\r\n  return React.cloneElement(current, {\r\n    in: false,\r\n    onExited: callHook(current, 'onExited', function () {\r\n      changeState(ENTERING, null);\r\n    })\r\n  });\r\n}, _leaveRenders[modes.in] = function (_ref2) {\r\n  var current = _ref2.current,\r\n      changeState = _ref2.changeState,\r\n      children = _ref2.children;\r\n  return [current, React.cloneElement(children, {\r\n    in: true,\r\n    onEntered: callHook(children, 'onEntered', function () {\r\n      changeState(ENTERING);\r\n    })\r\n  })];\r\n}, _leaveRenders);\r\nvar enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function (_ref3) {\r\n  var children = _ref3.children,\r\n      changeState = _ref3.changeState;\r\n  return React.cloneElement(children, {\r\n    in: true,\r\n    onEntered: callHook(children, 'onEntered', function () {\r\n      changeState(ENTERED, React.cloneElement(children, {\r\n        in: true\r\n      }));\r\n    })\r\n  });\r\n}, _enterRenders[modes.in] = function (_ref4) {\r\n  var current = _ref4.current,\r\n      children = _ref4.children,\r\n      changeState = _ref4.changeState;\r\n  return [React.cloneElement(current, {\r\n    in: false,\r\n    onExited: callHook(current, 'onExited', function () {\r\n      changeState(ENTERED, React.cloneElement(children, {\r\n        in: true\r\n      }));\r\n    })\r\n  }), React.cloneElement(children, {\r\n    in: true\r\n  })];\r\n}, _enterRenders);\r\n/**\r\n * A transition component inspired by the [vue transition modes](https://vuejs.org/v2/guide/transitions.html#Transition-Modes).\r\n * You can use it when you want to control the render between state transitions.\r\n * Based on the selected mode and the child's key which is the `Transition` or `CSSTransition` component, the `SwitchTransition` makes a consistent transition between them.\r\n *\r\n * If the `out-in` mode is selected, the `SwitchTransition` waits until the old child leaves and then inserts a new child.\r\n * If the `in-out` mode is selected, the `SwitchTransition` inserts a new child first, waits for the new child to enter and then removes the old child.\r\n *\r\n * **Note**: If you want the animation to happen simultaneously\r\n * (that is, to have the old child removed and a new child inserted **at the same time**),\r\n * you should use\r\n * [`TransitionGroup`](https://reactcommunity.org/react-transition-group/transition-group)\r\n * instead.\r\n *\r\n * ```jsx\r\n * function App() {\r\n *  const [state, setState] = useState(false);\r\n *  return (\r\n *    <SwitchTransition>\r\n *      <CSSTransition\r\n *        key={state ? \"Goodbye, world!\" : \"Hello, world!\"}\r\n *        addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\r\n *        classNames='fade'\r\n *      >\r\n *        <button onClick={() => setState(state => !state)}>\r\n *          {state ? \"Goodbye, world!\" : \"Hello, world!\"}\r\n *        </button>\r\n *      </CSSTransition>\r\n *    </SwitchTransition>\r\n *  );\r\n * }\r\n * ```\r\n *\r\n * ```css\r\n * .fade-enter{\r\n *    opacity: 0;\r\n * }\r\n * .fade-exit{\r\n *    opacity: 1;\r\n * }\r\n * .fade-enter-active{\r\n *    opacity: 1;\r\n * }\r\n * .fade-exit-active{\r\n *    opacity: 0;\r\n * }\r\n * .fade-enter-active,\r\n * .fade-exit-active{\r\n *    transition: opacity 500ms;\r\n * }\r\n * ```\r\n */\r\n\r\nvar SwitchTransition = /*#__PURE__*/function (_React$Component) {\r\n  _inheritsLoose(SwitchTransition, _React$Component);\r\n\r\n  function SwitchTransition() {\r\n    var _this;\r\n\r\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      args[_key] = arguments[_key];\r\n    }\r\n\r\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\r\n    _this.state = {\r\n      status: ENTERED,\r\n      current: null\r\n    };\r\n    _this.appeared = false;\r\n\r\n    _this.changeState = function (status, current) {\r\n      if (current === void 0) {\r\n        current = _this.state.current;\r\n      }\r\n\r\n      _this.setState({\r\n        status: status,\r\n        current: current\r\n      });\r\n    };\r\n\r\n    return _this;\r\n  }\r\n\r\n  var _proto = SwitchTransition.prototype;\r\n\r\n  _proto.componentDidMount = function componentDidMount() {\r\n    this.appeared = true;\r\n  };\r\n\r\n  SwitchTransition.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\r\n    if (props.children == null) {\r\n      return {\r\n        current: null\r\n      };\r\n    }\r\n\r\n    if (state.status === ENTERING && props.mode === modes.in) {\r\n      return {\r\n        status: ENTERING\r\n      };\r\n    }\r\n\r\n    if (state.current && areChildrenDifferent(state.current, props.children)) {\r\n      return {\r\n        status: EXITING\r\n      };\r\n    }\r\n\r\n    return {\r\n      current: React.cloneElement(props.children, {\r\n        in: true\r\n      })\r\n    };\r\n  };\r\n\r\n  _proto.render = function render() {\r\n    var _this$props = this.props,\r\n        children = _this$props.children,\r\n        mode = _this$props.mode,\r\n        _this$state = this.state,\r\n        status = _this$state.status,\r\n        current = _this$state.current;\r\n    var data = {\r\n      children: children,\r\n      current: current,\r\n      changeState: this.changeState,\r\n      status: status\r\n    };\r\n    var component;\r\n\r\n    switch (status) {\r\n      case ENTERING:\r\n        component = enterRenders[mode](data);\r\n        break;\r\n\r\n      case EXITING:\r\n        component = leaveRenders[mode](data);\r\n        break;\r\n\r\n      case ENTERED:\r\n        component = current;\r\n    }\r\n\r\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\r\n      value: {\r\n        isMounting: !this.appeared\r\n      }\r\n    }, component);\r\n  };\r\n\r\n  return SwitchTransition;\r\n}(React.Component);\r\n\r\nSwitchTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /**\r\n   * Transition modes.\r\n   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.\r\n   * `in-out`: New element transitions in first, then when complete, the current element transitions out.\r\n   *\r\n   * @type {'out-in'|'in-out'}\r\n   */\r\n  mode: PropTypes.oneOf([modes.in, modes.out]),\r\n\r\n  /**\r\n   * Any `Transition` or `CSSTransition` component.\r\n   */\r\n  children: PropTypes.oneOfType([PropTypes.element.isRequired])\r\n} : {};\r\nSwitchTransition.defaultProps = {\r\n  mode: modes.out\r\n};\r\nexport default SwitchTransition;"],"mappings":"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"},"metadata":{},"sourceType":"module"}